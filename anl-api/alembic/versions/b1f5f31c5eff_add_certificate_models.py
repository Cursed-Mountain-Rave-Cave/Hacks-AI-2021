"""Add certificate models

Revision ID: b1f5f31c5eff
Revises: 
Create Date: 2021-08-21 01:38:24.285312

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b1f5f31c5eff'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certificate_isreqsource_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_isrequest_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_nature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_protected',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate_vetform',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('guid', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('alpha2', sa.String(length=2), nullable=True),
    sa.Column('alpha3', sa.String(length=3), nullable=True),
    sa.Column('numCode', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_table('federal_district',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('former',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id2', sa.String(length=30), nullable=True),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milk_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('base_unit_id', sa.Integer(), nullable=True),
    sa.Column('ratio', sa.Integer(), nullable=True),
    sa.Column('guid', sa.String(length=36), nullable=True),
    sa.Column('last', sa.Integer(), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('base_unit_uuid', sa.String(length=36), nullable=True),
    sa.Column('base_unit_guid', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('user_type_id', sa.Integer(), nullable=True),
    sa.Column('login', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('product_type_id', sa.Integer(), nullable=True),
    sa.Column('guid', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['product_type_id'], ['product_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('guid', sa.String(length=36), nullable=True),
    sa.Column('last', sa.Integer(), nullable=True),
    sa.Column('federal_district', sa.Integer(), nullable=True),
    sa.Column('guid_country', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['guid_country'], ['country.guid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    op.create_table('sub_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('guid', sa.String(length=36), nullable=True),
    sa.Column('last', sa.Integer(), nullable=True),
    sa.Column('milk_type_id', sa.Integer(), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['milk_type_id'], ['milk_type.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('guid')
    )
    op.create_table('sub_region',
    sa.Column('guid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('guid_country', sa.String(length=36), nullable=True),
    sa.Column('iso_name', sa.String(length=3), nullable=True),
    sa.Column('region_num', sa.Integer(), nullable=True),
    sa.Column('parent_guid', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['guid_country'], ['country.guid'], ),
    sa.ForeignKeyConstraint(['parent_guid'], ['region.guid'], ),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_table('product_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=True),
    sa.Column('sub_product_id', sa.Integer(), nullable=True),
    sa.Column('fit_gost', sa.Integer(), nullable=True),
    sa.Column('sub_product_guid', sa.String(length=36), nullable=True),
    sa.Column('is_last', sa.Integer(), nullable=True),
    sa.Column('active', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sub_product_guid'], ['sub_product.guid'], ),
    sa.ForeignKeyConstraint(['sub_product_id'], ['sub_product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cert_type_id', sa.Integer(), nullable=True),
    sa.Column('cert_vetform_id', sa.Integer(), nullable=True),
    sa.Column('cert_status_id', sa.Integer(), nullable=True),
    sa.Column('cert_nature_type_id', sa.Integer(), nullable=True),
    sa.Column('cert_request_type_id', sa.Integer(), nullable=True),
    sa.Column('cert_reqsource_type_id', sa.Integer(), nullable=True),
    sa.Column('consignor_be_id', sa.Integer(), nullable=True),
    sa.Column('consignor_ent_id', sa.Integer(), nullable=True),
    sa.Column('consignee_be_id', sa.Integer(), nullable=True),
    sa.Column('consignee_ent_id', sa.Integer(), nullable=True),
    sa.Column('sub_product_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('unit_guid', sa.String(length=36), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('base_unit_id', sa.Integer(), nullable=True),
    sa.Column('cert_date', sa.DateTime(), nullable=True),
    sa.Column('cert_insert_date', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('base_weight', sa.Float(), nullable=True),
    sa.Column('consignor_be_region_id', sa.Integer(), nullable=True),
    sa.Column('consignor_ent_region_id', sa.Integer(), nullable=True),
    sa.Column('consignee_be_region_id', sa.Integer(), nullable=True),
    sa.Column('consignee_ent_region_id', sa.Integer(), nullable=True),
    sa.Column('transfer_type_id', sa.Integer(), nullable=True),
    sa.Column('product_type_id', sa.Integer(), nullable=True),
    sa.Column('cert_source_id', sa.Integer(), nullable=True),
    sa.Column('cert_protected_id', sa.Integer(), nullable=True),
    sa.Column('protocol_version', sa.String(length=36), nullable=True),
    sa.Column('consignor_be_sub_region_guid', sa.Integer(), nullable=True),
    sa.Column('consignor_ent_sub_region_guid', sa.Integer(), nullable=True),
    sa.Column('consignee_be_sub_region_guid', sa.Integer(), nullable=True),
    sa.Column('consignee_ent_sub_region_guid', sa.Integer(), nullable=True),
    sa.Column('repaid_doctor_id', sa.Integer(), nullable=True),
    sa.Column('repair_cert_date', sa.DateTime(), nullable=True),
    sa.Column('canceled_doctor_id', sa.Integer(), nullable=True),
    sa.Column('canceled_cert_date', sa.DateTime(), nullable=True),
    sa.Column('vet_expertice', sa.Integer(), nullable=True),
    sa.Column('transit_time_hour', sa.BigInteger(), nullable=True),
    sa.Column('guid_origin_country', sa.String(length=36), nullable=True),
    sa.Column('product_name_id', sa.Integer(), nullable=True),
    sa.Column('former_id', sa.Integer(), nullable=True),
    sa.Column('guid_recepient_country', sa.String(length=36), nullable=True),
    sa.Column('milk_attr_fat_min', sa.Float(), nullable=True),
    sa.Column('milk_attr_fat_max', sa.Float(), nullable=True),
    sa.Column('milk_attr_fat_type', sa.Integer(), nullable=True),
    sa.Column('milk_attr_density_min', sa.Float(), nullable=True),
    sa.Column('milk_attr_density_max', sa.Float(), nullable=True),
    sa.Column('milk_attr_density_type', sa.Integer(), nullable=True),
    sa.Column('milk_attr_protein_min', sa.Float(), nullable=True),
    sa.Column('milk_attr_protein_max', sa.Float(), nullable=True),
    sa.Column('milk_attr_protein_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['base_unit_id'], ['unit.id'], ),
    sa.ForeignKeyConstraint(['canceled_doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['cert_nature_type_id'], ['certificate_nature.id'], ),
    sa.ForeignKeyConstraint(['cert_protected_id'], ['certificate_protected.id'], ),
    sa.ForeignKeyConstraint(['cert_reqsource_type_id'], ['certificate_isreqsource_type.id'], ),
    sa.ForeignKeyConstraint(['cert_request_type_id'], ['certificate_isrequest_type.id'], ),
    sa.ForeignKeyConstraint(['cert_source_id'], ['certificate_source.id'], ),
    sa.ForeignKeyConstraint(['cert_status_id'], ['certificate_status.id'], ),
    sa.ForeignKeyConstraint(['cert_type_id'], ['certificate_type.id'], ),
    sa.ForeignKeyConstraint(['cert_vetform_id'], ['certificate_vetform.id'], ),
    sa.ForeignKeyConstraint(['consignee_be_region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['consignee_be_sub_region_guid'], ['sub_region.guid'], ),
    sa.ForeignKeyConstraint(['consignee_ent_region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['consignee_ent_sub_region_guid'], ['sub_region.guid'], ),
    sa.ForeignKeyConstraint(['consignor_be_region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['consignor_be_sub_region_guid'], ['sub_region.guid'], ),
    sa.ForeignKeyConstraint(['consignor_ent_region_id'], ['region.id'], ),
    sa.ForeignKeyConstraint(['consignor_ent_sub_region_guid'], ['sub_region.guid'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['former_id'], ['former.id'], ),
    sa.ForeignKeyConstraint(['guid_origin_country'], ['country.guid'], ),
    sa.ForeignKeyConstraint(['guid_recepient_country'], ['country.guid'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['product_name_id'], ['product_name.id'], ),
    sa.ForeignKeyConstraint(['product_type_id'], ['product_type.id'], ),
    sa.ForeignKeyConstraint(['repaid_doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sub_product_id'], ['sub_product.id'], ),
    sa.ForeignKeyConstraint(['transfer_type_id'], ['transfer_type.id'], ),
    sa.ForeignKeyConstraint(['unit_guid'], ['unit.guid'], ),
    sa.ForeignKeyConstraint(['unit_id'], ['unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('certificate')
    op.drop_table('product_name')
    op.drop_table('sub_region')
    op.drop_table('sub_product')
    op.drop_table('region')
    op.drop_table('product')
    op.drop_table('users')
    op.drop_table('unit')
    op.drop_table('transfer_type')
    op.drop_table('product_type')
    op.drop_table('milk_type')
    op.drop_table('former')
    op.drop_table('federal_district')
    op.drop_table('country')
    op.drop_table('certificate_vetform')
    op.drop_table('certificate_type')
    op.drop_table('certificate_status')
    op.drop_table('certificate_source')
    op.drop_table('certificate_protected')
    op.drop_table('certificate_nature')
    op.drop_table('certificate_isrequest_type')
    op.drop_table('certificate_isreqsource_type')
    # ### end Alembic commands ###
